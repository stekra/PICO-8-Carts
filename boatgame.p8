pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- boat game
-- by @sutekura

function _init()
	b={} -- boat
	b.x=40
	b.y=100
	b.vx=0
	b.vy=0
	b.ang=0.35
	b.spd=0.005
	
	s={} -- sail
	s.x=b.x
	s.y=b.y
	s.ang=.35
end

function _update60()
 b.ang=b.ang%1
 s.ang=s.ang%1
 
 wf=abs(cos(s.ang))
 
 b.vx-=cos(b.ang)*b.spd*wf
 b.vy+=sin(b.ang)*b.spd*wf
 
 falloff=0.99
 b.vx*=falloff
 b.vy*=falloff
 -- todo: prevent sliding
 -- somehow...
 
 b.x+=b.vx
 b.y+=b.vy
 
 -- turn ctrl
 t=0.004
 vm=sqrt(b.vx*b.vx+b.vy*b.vy)
 vm=(vm*2.5+0.2)
 if (btn(⬅️)) b.ang-=t*vm
 if (btn(➡️)) b.ang+=t*vm
 
 -- sail ctrl
 if (btn(🅾️)) then
  s.ang=arot(s.ang,b.ang,0.005)
 else
  s.ang=arot(s.ang,0.25,0.005)
	end
	 
 -- adjust sail position
 local offset=2
 s.x=b.x-cos(b.ang)*offset
 s.x-=0.5
 s.y=b.y+sin(b.ang)*offset
end

function _draw()
	cls(3)
	color(11)
	print("a:"..b.ang,0,0)
 print("x:"..b.x,0,6)
	print("y:"..b.y,0,12)
	print("sa:"..s.ang,0,20)
	print("wf:"..wf,0,28)
	print("vm:"..vm,0,34)
	draw_sail_refl(s.x,s.y,s.ang)
	print("●      ●",45,21,11)
	print("●      ●",45,91,11)
	print("●………●",45,20,9)
	print("●………●",45,90,9)
 draw_boat(b.x,b.y,b.ang)
 draw_sail(s.x,s.y,s.ang)
 spr(40,110,4,2,2)
end

-->8
-- sprite rotation ✽
-- by @fsouchu

-- rotate a sprite
-- col 15 is transparent
-- sx,sy - sprite sheet coords
-- x,y - screen coords
-- a - angle
-- w - width in tiles
function rspr(sx,sy,x,y,a,w)
 local ca,sa=cos(a),sin(a)
 local srcx,srcy
 local ddx0,ddy0=ca,sa
 local mask=shl(0xfff8,(w-1))
 w*=4
 ca*=w-0.5
 sa*=w-0.5
 local dx0,dy0=sa-ca+w,-ca-sa+w
 w=2*w-1
 for ix=0,w do
  srcx,srcy=dx0,dy0
  for iy=0,w do
   if band(bor(srcx,srcy),mask)==0 then
    local c=sget(sx+srcx,sy+srcy)
 -- set transparent color here
    if (c!=0) pset(x+ix,y+iy,c)
   end
   srcx-=ddy0
   srcy+=ddx0
  end
  dx0+=ddx0
  dy0+=ddy0
 end
end

-->8
-- draw functions ∧

function draw_boat(x,y,a)
 for i=0,1 do
  local sx=16*(i%8)
  local sy=16*flr(i/8)
  rspr(sx,sy,x,y-i,a,2)
 end
end

function draw_sail(x,y,a)
 for i=2,11 do
  local sx=16*(i%8)
  local sy=16*flr(i/8)
  rspr(sx,sy,x,y-i,a,2)
 end
end

function draw_sail_refl(x,y,a)
 for i=2,11 do
  local sx=16*(i%8)
  local sy=16*flr(i/8)
  pal(7,10)
  pal(5,11)
--  rspr(sx,sy,x+sin(i*time()/10),y+i,a,2)
  rspr(sx,sy,x,y+i,a,2)
  pal()
  pal(10,138,1)
 end
-- for i=2,30,2 do
--  line(x,y+i,x+16,y+i,3)
-- end
end
-->8
-- helper functions ♥

-- signed ang +/- 180 deg
function s180a(a)
 if     (a>0.5)  then a-=1
 elseif (a<-0.5) then a+=1
 end
 return a
end

-- rotate angle a
-- towards angle t
-- with angular speed s
function arot(a,t,s)
 local d = s180a(t-a)
 if     (d>s)  then a+=s
 elseif (d<-s) then a-=s
 else   a=t
 end
 return a
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000bbbbbbbb0000000055555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000bbbbbbbbbbb000005555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00bbbbbbbbbbbb000055555555555500000000005000000000000000577777770000000057777777000000005777777000000000577777700000000057777700
00bbbbbbbbbbbb000055555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000bbbbbbbbbbb000005555555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000bbbbbbbb0000000055555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000808080880088000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000808000808080800000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000888080808080800000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000888080808088000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008880000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008880000000000000000000000000000000000000000000000000000000
00000000577770000000000057770000000000005770000000000000570000000000008880000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008880000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000008888888880000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000888888800000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000088888000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000008880000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000
__map__
3d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
